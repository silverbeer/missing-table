{
  "openapi": "3.1.0",
  "info": {
    "title": "Enhanced Sports League API",
    "version": "2.0.0"
  },
  "paths": {
    "/api/auth/signup": {
      "post": {
        "summary": "Signup",
        "description": "User signup endpoint with security monitoring.",
        "operationId": "signup_api_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login",
        "description": "User login endpoint with enhanced security monitoring.",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout",
        "description": "User logout endpoint.",
        "operationId": "logout_api_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/profile": {
      "get": {
        "summary": "Get Profile",
        "description": "Get current user's profile.",
        "operationId": "get_profile_api_auth_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Profile",
        "description": "Update current user's profile.",
        "operationId": "update_profile_api_auth_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/users": {
      "get": {
        "summary": "Get Users",
        "description": "Get all users (admin only).",
        "operationId": "get_users_api_auth_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refresh Token",
        "description": "Refresh JWT token using refresh token.",
        "operationId": "refresh_token_api_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get Current User Info",
        "description": "Get current user info for frontend auth state.",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/positions": {
      "get": {
        "summary": "Get Positions",
        "description": "Get all available player positions.",
        "operationId": "get_positions_api_positions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/users/role": {
      "put": {
        "summary": "Update User Role",
        "description": "Update user role (admin only).",
        "operationId": "update_user_role_api_auth_users_role_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/csrf-token": {
      "get": {
        "summary": "Get Csrf Token Endpoint",
        "description": "Get CSRF token for the session.",
        "operationId": "get_csrf_token_endpoint_api_csrf_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/age-groups": {
      "get": {
        "summary": "Get Age Groups",
        "description": "Get all age groups.",
        "operationId": "get_age_groups_api_age_groups_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Age Group",
        "description": "Create a new age group (admin only).",
        "operationId": "create_age_group_api_age_groups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeGroupCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/seasons": {
      "get": {
        "summary": "Get Seasons",
        "description": "Get all seasons.",
        "operationId": "get_seasons_api_seasons_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Season",
        "description": "Create a new season (admin only).",
        "operationId": "create_season_api_seasons_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeasonCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/current-season": {
      "get": {
        "summary": "Get Current Season",
        "description": "Get the current active season.",
        "operationId": "get_current_season_api_current_season_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/active-seasons": {
      "get": {
        "summary": "Get Active Seasons",
        "description": "Get active seasons (current and future) for scheduling new games.",
        "operationId": "get_active_seasons_api_active_seasons_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/game-types": {
      "get": {
        "summary": "Get Game Types",
        "description": "Get all game types.",
        "operationId": "get_game_types_api_game_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/divisions": {
      "get": {
        "summary": "Get Divisions",
        "description": "Get all divisions.",
        "operationId": "get_divisions_api_divisions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Division",
        "description": "Create a new division (admin only).",
        "operationId": "create_division_api_divisions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/teams": {
      "get": {
        "summary": "Get Teams",
        "description": "Get teams, optionally filtered by game type and age group.",
        "operationId": "get_teams_api_teams_get",
        "parameters": [
          {
            "name": "game_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type Id"
            }
          },
          {
            "name": "age_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Age Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Team",
        "description": "Add a new team with age groups and optionally divisions.",
        "operationId": "add_team_api_teams_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games": {
      "get": {
        "summary": "Get Games",
        "description": "Get all games with optional filters.",
        "operationId": "get_games_api_games_get",
        "parameters": [
          {
            "name": "season_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by season ID",
              "title": "Season Id"
            },
            "description": "Filter by season ID"
          },
          {
            "name": "age_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by age group ID",
              "title": "Age Group Id"
            },
            "description": "Filter by age group ID"
          },
          {
            "name": "division_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by division ID",
              "title": "Division Id"
            },
            "description": "Filter by division ID"
          },
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by game type name",
              "title": "Game Type"
            },
            "description": "Filter by game type name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Game",
        "description": "Add a new game with enhanced schema (requires admin, team manager, or service account with manage_games permission).",
        "operationId": "add_game_api_games_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnhancedGame"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/{game_id}": {
      "put": {
        "summary": "Update Game",
        "description": "Update an existing game (admin or service account with manage_games permission).",
        "operationId": "update_game_api_games__game_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Game Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnhancedGame"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Patch Game",
        "description": "Partially update a game (requires manage_games permission).\n\nThis endpoint allows updating specific fields without requiring all fields.\nCommonly used for score updates from match-scraper.",
        "operationId": "patch_game_api_games__game_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Game Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GamePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Game",
        "description": "Delete a game (admin or team manager only).",
        "operationId": "delete_game_api_games__game_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Game Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/team/{team_id}": {
      "get": {
        "summary": "Get Games By Team",
        "description": "Get games for a specific team.",
        "operationId": "get_games_by_team_api_games_team__team_id__get",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "season_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by season ID",
              "title": "Season Id"
            },
            "description": "Filter by season ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/table": {
      "get": {
        "summary": "Get Table",
        "description": "Get league table with enhanced filtering.",
        "operationId": "get_table_api_table_get",
        "parameters": [
          {
            "name": "season_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by season ID",
              "title": "Season Id"
            },
            "description": "Filter by season ID"
          },
          {
            "name": "age_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by age group ID",
              "title": "Age Group Id"
            },
            "description": "Filter by age group ID"
          },
          {
            "name": "division_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by division ID",
              "title": "Division Id"
            },
            "description": "Filter by division ID"
          },
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Game type (League, Tournament, etc.)",
              "default": "League",
              "title": "Game Type"
            },
            "description": "Game type (League, Tournament, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/age-groups/{age_group_id}": {
      "put": {
        "summary": "Update Age Group",
        "description": "Update an age group (admin only).",
        "operationId": "update_age_group_api_age_groups__age_group_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "age_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Age Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeGroupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Age Group",
        "description": "Delete an age group (admin only).",
        "operationId": "delete_age_group_api_age_groups__age_group_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "age_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Age Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/seasons/{season_id}": {
      "put": {
        "summary": "Update Season",
        "description": "Update a season (admin only).",
        "operationId": "update_season_api_seasons__season_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "season_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Season Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeasonUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Season",
        "description": "Delete a season (admin only).",
        "operationId": "delete_season_api_seasons__season_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "season_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Season Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/divisions/{division_id}": {
      "put": {
        "summary": "Update Division",
        "description": "Update a division (admin only).",
        "operationId": "update_division_api_divisions__division_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "division_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Division Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Division",
        "description": "Delete a division (admin only).",
        "operationId": "delete_division_api_divisions__division_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "division_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Division Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{team_id}": {
      "put": {
        "summary": "Update Team",
        "description": "Update a team (admin only).",
        "operationId": "update_team_api_teams__team_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Team",
        "description": "Delete a team (admin only).",
        "operationId": "delete_team_api_teams__team_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{team_id}/game-types": {
      "post": {
        "summary": "Add Team Game Type Participation",
        "description": "Add a team's participation in a specific game type and age group (admin only).",
        "operationId": "add_team_game_type_participation_api_teams__team_id__game_types_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamGameTypeMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{team_id}/game-types/{game_type_id}/{age_group_id}": {
      "delete": {
        "summary": "Remove Team Game Type Participation",
        "description": "Remove a team's participation in a specific game type and age group (admin only).",
        "operationId": "remove_team_game_type_participation_api_teams__team_id__game_types__game_type_id___age_group_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "game_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Game Type Id"
            }
          },
          {
            "name": "age_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Age Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/team-mappings": {
      "post": {
        "summary": "Create Team Mapping",
        "description": "Create a team mapping (admin only).",
        "operationId": "create_team_mapping_api_team_mappings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMappingCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/team-mappings/{team_id}/{age_group_id}/{division_id}": {
      "delete": {
        "summary": "Delete Team Mapping",
        "description": "Delete a team mapping (admin only).",
        "operationId": "delete_team_mapping_api_team_mappings__team_id___age_group_id___division_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "age_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Age Group Id"
            }
          },
          {
            "name": "division_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Division Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/match-scraper/games": {
      "post": {
        "summary": "Add Or Update Scraped Game",
        "description": "Add or update a game from match-scraper with intelligent duplicate handling.",
        "operationId": "add_or_update_scraped_game_api_match_scraper_games_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnhancedGame"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/check-game": {
      "get": {
        "summary": "Check Game",
        "description": "Enhanced game existence check with comprehensive duplicate detection.",
        "operationId": "check_game_api_check_game_get",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Date"
            }
          },
          {
            "name": "homeTeam",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hometeam"
            }
          },
          {
            "name": "awayTeam",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Awayteam"
            }
          },
          {
            "name": "season_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Season Id"
            }
          },
          {
            "name": "age_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Age Group Id"
            }
          },
          {
            "name": "game_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type Id"
            }
          },
          {
            "name": "division_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Division Id"
            }
          },
          {
            "name": "match_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Match Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/analytics": {
      "get": {
        "summary": "Get Security Analytics",
        "description": "Get security analytics (admin only).",
        "operationId": "get_security_analytics_api_security_analytics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Time period in hours",
              "default": 24,
              "title": "Hours"
            },
            "description": "Time period in hours"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/user/{user_id}/summary": {
      "get": {
        "summary": "Get User Security Summary",
        "description": "Get security summary for a specific user (admin only).",
        "operationId": "get_user_security_summary_api_security_user__user_id__summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/security/cleanup-sessions": {
      "post": {
        "summary": "Cleanup Expired Sessions",
        "description": "Cleanup expired sessions (admin only).",
        "operationId": "cleanup_expired_sessions_api_security_cleanup_sessions_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/security/client-events": {
      "post": {
        "summary": "Receive Client Security Events",
        "description": "Receive security events from client-side monitoring.",
        "operationId": "receive_client_security_events_api_security_client_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Event Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Basic health check endpoint.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health/full": {
      "get": {
        "summary": "Full Health Check",
        "description": "Comprehensive health check including database connectivity.",
        "operationId": "full_health_check_health_full_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgeGroupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AgeGroupCreate"
      },
      "AgeGroupUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AgeGroupUpdate"
      },
      "DivisionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DivisionCreate"
      },
      "DivisionUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DivisionUpdate"
      },
      "EnhancedGame": {
        "properties": {
          "game_date": {
            "type": "string",
            "title": "Game Date"
          },
          "home_team_id": {
            "type": "integer",
            "title": "Home Team Id"
          },
          "away_team_id": {
            "type": "integer",
            "title": "Away Team Id"
          },
          "home_score": {
            "type": "integer",
            "title": "Home Score"
          },
          "away_score": {
            "type": "integer",
            "title": "Away Score"
          },
          "season_id": {
            "type": "integer",
            "title": "Season Id"
          },
          "age_group_id": {
            "type": "integer",
            "title": "Age Group Id"
          },
          "game_type_id": {
            "type": "integer",
            "title": "Game Type Id"
          },
          "division_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Division Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "scheduled"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "default": "manual"
          }
        },
        "type": "object",
        "required": [
          "game_date",
          "home_team_id",
          "away_team_id",
          "home_score",
          "away_score",
          "season_id",
          "age_group_id",
          "game_type_id"
        ],
        "title": "EnhancedGame"
      },
      "GamePatch": {
        "properties": {
          "home_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Home Score"
          },
          "away_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Away Score"
          },
          "match_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Status"
          },
          "game_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Date"
          },
          "home_team_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Home Team Id"
          },
          "away_team_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Away Team Id"
          },
          "season_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Season Id"
          },
          "age_group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Group Id"
          },
          "game_type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Type Id"
          },
          "division_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Division Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "GamePatch",
        "description": "Model for partial game updates."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest"
      },
      "RoleUpdate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role"
        ],
        "title": "RoleUpdate"
      },
      "SeasonCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_date",
          "end_date"
        ],
        "title": "SeasonCreate"
      },
      "SeasonUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_date",
          "end_date"
        ],
        "title": "SeasonUpdate"
      },
      "Team": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "age_group_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Age Group Ids"
          },
          "division_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Division Ids"
          },
          "academy_team": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academy Team",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "city",
          "age_group_ids"
        ],
        "title": "Team"
      },
      "TeamGameTypeMapping": {
        "properties": {
          "game_type_id": {
            "type": "integer",
            "title": "Game Type Id"
          },
          "age_group_id": {
            "type": "integer",
            "title": "Age Group Id"
          }
        },
        "type": "object",
        "required": [
          "game_type_id",
          "age_group_id"
        ],
        "title": "TeamGameTypeMapping"
      },
      "TeamMappingCreate": {
        "properties": {
          "team_id": {
            "type": "integer",
            "title": "Team Id"
          },
          "age_group_id": {
            "type": "integer",
            "title": "Age Group Id"
          },
          "division_id": {
            "type": "integer",
            "title": "Division Id"
          }
        },
        "type": "object",
        "required": [
          "team_id",
          "age_group_id",
          "division_id"
        ],
        "title": "TeamMappingCreate"
      },
      "TeamUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "academy_team": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academy Team",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "city"
        ],
        "title": "TeamUpdate"
      },
      "UserLogin": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserLogin"
      },
      "UserProfile": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id"
          },
          "player_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Player Number"
          },
          "positions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Positions"
          }
        },
        "type": "object",
        "title": "UserProfile"
      },
      "UserSignup": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserSignup"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}