# Polaris Configuration for Kubernetes Best Practices Validation
apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris-config
  namespace: missing-table
  labels:
    app: polaris
    component: validation
data:
  config.yaml: |
    checks:
      # Security Checks
      runAsNonRoot: error
      runAsRootAllowed: error
      readOnlyRootFilesystem: error
      allowPrivilegeEscalation: error
      runAsPrivileged: error
      notReadOnlyRootFilesystem: warning
      privilegeEscalationAllowed: error
      insecureCapabilities: error
      dangerousCapabilities: error
      
      # Image Security
      tagNotSpecified: error
      pullPolicyNotAlways: warning
      
      # Health Checks
      readinessProbeMissing: warning
      livenessProbeMissing: warning
      
      # Resource Management
      cpuRequestsMissing: warning
      cpuLimitsMissing: warning
      memoryRequestsMissing: warning
      memoryLimitsMissing: warning
      
      # Networking
      hostNetworkSet: error
      hostPortSet: error
      
      # Storage
      hostPathSet: warning
      
    exemptions:
      - namespace: kube-system
      - namespace: kube-public
      - namespace: kube-node-lease
      - namespace: local-path-storage
    
    mutations: []
    
    customChecks:
      missing-table-security:
        successMessage: Missing Table security requirements met
        failureMessage: Missing Table security requirements not met
        category: Security
        target: Container
        schema:
          '$schema': http://json-schema.org/draft-07/schema
          type: object
          properties:
            securityContext:
              type: object
              required:
                - runAsNonRoot
                - readOnlyRootFilesystem
                - allowPrivilegeEscalation
              properties:
                runAsNonRoot:
                  const: true
                readOnlyRootFilesystem:
                  const: true
                allowPrivilegeEscalation:
                  const: false
                capabilities:
                  type: object
                  required:
                    - drop
                  properties:
                    drop:
                      type: array
                      contains:
                        const: ALL
    
    controllers:
      include:
        - Deployments
        - StatefulSets
        - DaemonSets
        - Jobs
        - CronJobs
        - ReplicationControllers
        - Pods
      exclude: []
---
apiVersion: batch/v1
kind: Job
metadata:
  name: polaris-scan
  namespace: missing-table
  labels:
    app: polaris
    component: validation
spec:
  template:
    metadata:
      labels:
        app: polaris
        component: validation
    spec:
      serviceAccountName: polaris
      restartPolicy: Never
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: polaris
        image: quay.io/fairwinds/polaris:8.5.1
        imagePullPolicy: IfNotPresent
        command:
        - polaris
        - audit
        - --config
        - /etc/polaris/config.yaml
        - --output-file
        - /results/polaris-report.json
        - --format
        - json
        - --namespace
        - missing-table
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: polaris-config
          mountPath: /etc/polaris
          readOnly: true
        - name: results
          mountPath: /results
        env:
        - name: POLARIS_LOG_LEVEL
          value: "info"
      volumes:
      - name: polaris-config
        configMap:
          name: polaris-config
      - name: results
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polaris
  namespace: missing-table
  labels:
    app: polaris
    component: validation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: polaris
  labels:
    app: polaris
    component: validation
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - pods
  - replicationcontrollers
  - services
  - serviceaccounts
  - configmaps
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: polaris
  labels:
    app: polaris
    component: validation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: polaris
subjects:
- kind: ServiceAccount
  name: polaris
  namespace: missing-table