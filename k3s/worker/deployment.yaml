apiVersion: apps/v1
kind: Deployment
metadata:
  name: missing-table-celery-worker
  namespace: match-scraper
  labels:
    app: missing-table-worker
spec:
  replicas: 2  # Start with 2 workers
  selector:
    matchLabels:
      app: missing-table-worker
  template:
    metadata:
      labels:
        app: missing-table-worker
    spec:
      containers:
      - name: celery-worker
        image: missing-table-worker:latest
        imagePullPolicy: Never  # Use local image (k3s/rancher-desktop)

        # Run in worker mode
        command:
          - /app/docker-entrypoint.sh
        args:
          - worker
          - --loglevel=info
          - --queues=matches
          - --concurrency=4

        env:
        # RabbitMQ Configuration
        - name: RABBITMQ_URL
          valueFrom:
            configMapKeyRef:
              name: missing-table-worker-config
              key: RABBITMQ_URL

        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: missing-table-worker-config
              key: CELERY_BROKER_URL

        # Result Backend Configuration (RPC - no Redis needed)
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: missing-table-worker-config
              key: CELERY_RESULT_BACKEND

        # Supabase Configuration (from ConfigMap)
        - name: SUPABASE_URL
          valueFrom:
            configMapKeyRef:
              name: missing-table-worker-config
              key: SUPABASE_URL

        # Supabase Secrets (from Secret)
        - name: SUPABASE_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: missing-table-worker-secrets
              key: SUPABASE_KEY

        - name: SUPABASE_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: missing-table-worker-secrets
              key: SUPABASE_JWT_SECRET

        - name: SERVICE_ACCOUNT_SECRET
          valueFrom:
            secretKeyRef:
              name: missing-table-worker-secrets
              key: SERVICE_ACCOUNT_SECRET

        # Application Configuration
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: missing-table-worker-config
              key: ENVIRONMENT

        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: missing-table-worker-config
              key: LOG_LEVEL

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        # Health probes disabled - workers are stateless consumers
        # They connect to RabbitMQ on startup and begin consuming
        # No need for complex health checks for this use case

      # Restart policy
      restartPolicy: Always
