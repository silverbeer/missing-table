# ArgoCD Application for Security Stack
# This manages the deployment of all security components

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: security-stack
  namespace: argocd
  labels:
    security.missing-table.io/component: "security-stack"
    app.kubernetes.io/part-of: "gitops-security"
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    security.missing-table.io/description: "Complete security infrastructure deployment"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: security
  
  source:
    repoURL: https://github.com/silverbeer/missing-table.git
    targetRevision: v1.4
    path: gitops
    
    # Use Kustomize for configuration management
    kustomize:
      images:
        - gcr.io/missing-table-prod/security-scanner:v1.0.0
        - gcr.io/missing-table-prod/compliance-verifier:v1.0.0
        - gcr.io/missing-table-prod/security-responder:v1.0.0
        - gcr.io/missing-table-prod/compliance-reporter:v1.0.0
        - gcr.io/missing-table-prod/incident-responder:v1.0.0
        - gcr.io/missing-table-prod/forensic-analyzer:v1.0.0
        - gcr.io/missing-table-prod/audit-processor:v1.0.0
        - gcr.io/missing-table-prod/security-events-collector:v1.0.0
      
      commonLabels:
        security.missing-table.io/managed-by: "argocd"
        environment: "production"
        compliance.missing-table.io/required: "true"
      
      commonAnnotations:
        security.missing-table.io/deployment-time: "2024-08-03T22:00:00Z"
        compliance.missing-table.io/frameworks: "soc2,cis_k8s,nist,pci_dss"
  
  destination:
    server: https://kubernetes.default.svc
    namespace: security-infrastructure
  
  # Sync policy for security stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - Replace=false
      - ApplyOutOfSyncOnly=true
      - Validate=true
    
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  # Health checks for security components
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: ""
      kind: ConfigMap
      jsonPointers:
        - /data
  
  # Revenue sharing for security events
  revisionHistoryLimit: 10

---
# ArgoCD Application for Missing Table Main App
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: missing-table-app
  namespace: argocd
  labels:
    security.missing-table.io/component: "application"
    app.kubernetes.io/part-of: "missing-table"
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    security.missing-table.io/description: "Main Missing Table application"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    repoURL: https://github.com/silverbeer/missing-table.git
    targetRevision: v1.4
    path: k8s
    
    kustomize:
      commonLabels:
        security.missing-table.io/managed-by: "argocd"
        security.missing-table.io/scanned: "true"
        compliance.missing-table.io/verified: "true"
  
  destination:
    server: https://kubernetes.default.svc
    namespace: missing-table-prod
  
  # Security-aware sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
    
    # Pre-sync hook for security verification
    preSync:
      - apiVersion: batch/v1
        kind: Job
        metadata:
          name: pre-sync-security-check
          namespace: missing-table-prod
        spec:
          template:
            spec:
              serviceAccountName: security-verifier
              restartPolicy: Never
              containers:
              - name: security-check
                image: gcr.io/missing-table-prod/security-scanner:v1.0.0
                command:
                - /bin/sh
                - -c
                - |
                  echo "üîç Running pre-deployment security checks..."
                  
                  # Run security scans
                  /app/security-scanner --target-namespace missing-table-prod --compliance-check
                  
                  if [ $? -eq 0 ]; then
                    echo "‚úÖ Security checks passed"
                  else
                    echo "‚ùå Security checks failed - blocking deployment"
                    exit 1
                  fi

---
# ArgoCD Project for Security Components
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: security
  namespace: argocd
  labels:
    security.missing-table.io/project: "security"
spec:
  description: "Security infrastructure and compliance components"
  
  # Source repositories allowed for this project
  sourceRepos:
    - 'https://github.com/silverbeer/missing-table.git'
    - 'https://helm.gatekeeper.sh'
    - 'https://falcosecurity.github.io/charts'
    - 'https://grafana.github.io/helm-charts'
  
  # Destinations where apps in this project can be deployed
  destinations:
    - namespace: 'security-*'
      server: https://kubernetes.default.svc
    - namespace: 'compliance-*'
      server: https://kubernetes.default.svc
    - namespace: 'audit-*'
      server: https://kubernetes.default.svc
    - namespace: 'falco-system'
      server: https://kubernetes.default.svc
    - namespace: 'gatekeeper-system'
      server: https://kubernetes.default.svc
    - namespace: 'incident-response'
      server: https://kubernetes.default.svc
  
  # Cluster resource whitelist
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: rbac.authorization.k8s.io
      kind: ClusterRole
    - group: rbac.authorization.k8s.io
      kind: ClusterRoleBinding
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
    - group: admissionregistration.k8s.io
      kind: ValidatingAdmissionWebhook
    - group: admissionregistration.k8s.io
      kind: MutatingAdmissionWebhook
    - group: templates.gatekeeper.sh
      kind: ConstraintTemplate
    - group: config.gatekeeper.sh
      kind: Config
    - group: networking.k8s.io
      kind: NetworkPolicy
    - group: policy
      kind: PodSecurityPolicy
  
  # Namespace resource whitelist
  namespaceResourceWhitelist:
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Service
    - group: ''
      kind: ServiceAccount
    - group: apps
      kind: Deployment
    - group: apps
      kind: DaemonSet
    - group: apps
      kind: StatefulSet
    - group: batch
      kind: Job
    - group: batch
      kind: CronJob
    - group: ''
      kind: PersistentVolumeClaim
    - group: monitoring.coreos.com
      kind: ServiceMonitor
    - group: monitoring.coreos.com
      kind: PrometheusRule
    - group: constraints.gatekeeper.sh
      kind: '*'
  
  # Security roles for the project
  roles:
    - name: security-admin
      description: "Full access to security infrastructure"
      policies:
        - p, proj:security:security-admin, applications, *, security/*, allow
        - p, proj:security:security-admin, logs, get, security/*, allow
        - p, proj:security:security-admin, exec, create, security/*, allow
      groups:
        - missing-table:security-team
    
    - name: security-readonly
      description: "Read-only access to security components"
      policies:
        - p, proj:security:security-readonly, applications, get, security/*, allow
        - p, proj:security:security-readonly, logs, get, security/*, allow
      groups:
        - missing-table:developers
        - missing-table:operations
  
  # Sync windows for security updates
  syncWindows:
    - kind: allow
      schedule: '0 2 * * *'  # Daily at 2 AM
      duration: 2h
      applications:
        - security-stack
      manualSync: true
    
    - kind: deny
      schedule: '0 9-17 * * 1-5'  # Business hours
      duration: 8h
      applications:
        - security-stack
      manualSync: false